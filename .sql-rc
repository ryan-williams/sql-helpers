alias sq=sqlite3
alias squ=sqlite-utils
alias sqm="sqlite-utils memory"

sqlite_table_rows() {
    if [ $# -ne 1 ]; then
        echo "Usage: sqlite_table_rows <db>" >&2
        return 1
    fi
    db="$1"; shift
    echo "SELECT 'SELECT \"' || name || '\", count(*) FROM ' || name || ';'  FROM sqlite_master WHERE type = 'table';" \
    | sqlite3 "$db" \
    | sqlite3 "$db"
}
export -f sqlite_table_rows
defn str sqlite_table_rows
defn stc sqlite_table_rows

sqlite_list_tables() {
    if [ $# -ne 1 ]; then
        echo "Usage: sqlite_table_rows <db>" >&2
        return 1
    fi
    db="$1"; shift
    sqlite3 "$db" 'SELECT name FROM sqlite_master WHERE type="table"'
}
export -f sqlite_list_tables
defn slt sqlite_list_tables

sqlite_table_schemas() {
    if [ $# -eq 0 ]; then
        echo "Usage: sqlite_table_rows <db> [tbl...]" >&2
        return 1
    fi
    db="$1"; shift
    if [ $# -gt 0 ]; then
        for tbl in "$@"; do
            sqlite3 "$db" ".schema $tbl"
        done
    else
        echo "SELECT '.schema \"' || name || '\"'  FROM sqlite_master WHERE type = 'table';" \
        | sqlite3 "$db" \
        | sqlite3 "$db"
     fi
}
export -f sqlite_table_schemas
defn sts sqlite_table_schemas

sqlite2parquet() {
    if [ $# -lt 3 ]; then
        echo "Usage: sqlite2parquet <db_path> <tbl> <pqt_path> [sql_opts] [pqt_opts]" >&2
        return 1
    fi
    db_path="$1"; shift
    tbl="$1"; shift
    pqt_path="$1"; shift
    sql_opts="$1"; shift
    pqt_opts="$1"; shift
    python -c "import pandas as pd; df = pd.read_sql_table('$2', 'sqlite:///$1', $sql_opts); df.to_parquet('$3', $pqt_opts); print(len(df))"
}
export -f sqlite2parquet
defn s2p sqlite2parquet
